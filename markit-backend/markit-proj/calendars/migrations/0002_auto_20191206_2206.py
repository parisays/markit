# Generated by Django 2.2.6 on 2019-12-06 18:36

from django.db import migrations

from guardian.shortcuts import assign_perm
from guardian.compat import get_user_model, Group

PERMISSION_NAME = 'can_view'
PERMISSION_FULL_NAME = f'calendars.{PERMISSION_NAME}'

def make_can_view_perm(apps, schema_editor):
    Calendar = apps.get_model('calendars', 'Calendar')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    Permission = apps.get_model('auth', 'Permission')
    content_type = ContentType.objects.get_for_model(Calendar)
    permission = Permission.objects.create(
      codename=PERMISSION_NAME,
      name='Can view calendar',
      content_type=content_type
    )

def assign_can_view_perms(apps, schema_editor):
    User = get_user_model()
    Calendar = apps.get_model('calendars', 'Calendar')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    Permission = apps.get_model('auth', 'Permission')
    calendars = Calendar.objects.all()
    for calendar in calendars:
        group_name = f"calendar_{calendar.id}_viewers"
        group = Group.objects.create(name=group_name)
        assign_perm(PERMISSION_FULL_NAME, group, calendar)
        creator = User.objects.get(pk=calendar.owner.id)
        creator.groups.add(group)
        creator.save()

class Migration(migrations.Migration):

    dependencies = [
        ('calendars', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='calendar',
            options={'permissions': (('can_view', 'Viewer'),)},
        ),
        migrations.RunPython(make_can_view_perm),
        migrations.RunPython(assign_can_view_perms),
    ]
